% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove_similar_words.R
\name{drop_which}
\alias{drop_which}
\title{Determine which similar terms to drop}
\usage{
drop_which(simil_table, compare_hits = T, win_threshold = 0.5)
}
\arguments{
\item{simil_table}{data.frame. A pairwise similarity table returned
from \code{\link{detect_similar_words}}.}

\item{compare_hits}{logical. Default \code{TRUE}. If TRUE, will consider 'hits' in comparison.}

\item{win_threshold}{Numerical (0-1). Default .5. Determines the threshold to drop words,
defined as proportion of won pairwise comparisons.
If hits and scores are compared, it is the mean of both proportions.
Words will be suggested for dropping if the computed value is smaller than the value
set here.}
}
\value{
A data.frame with words suggested for dropping.
}
\description{
Takes the pairwise similarity table returned from \code{\link{detect_similar_words}}.
Returns a data.frame of terms that should be dropped according to the specified
decision rules.
The function can compare the words in the similarity table along two aspects:
\itemize{
\item The number of comparison wins regarding the score specified by \code{'compare_by'}
in \code{\link{detect_similar_words}}, resp. \code{\link{remove_similar_words}}.
This variable must be stored in the similarity table as \verb{'wins_score1}.
\item The number of comparison wins regarding the frequency of occurrences,
set as \code{'compare_hits = T'} in \code{\link{detect_similar_words}},
resp. \code{\link{remove_similar_words}}.
This variable must be stored in the similarity table as \verb{'wins_hits1}.
}
Both variables can be compared at the same time. If 'wins_score1' is missing,
the function will compare 'hits'.
}
\examples{
model <- fastrtext::load_model(system.file("extdata",
                                          "tw_demo_model_sml.bin",
                                           package = "dictvectoR"))
set.seed(1)
word_df <- data.frame(words = c("unsere steuern", "steuerzahler",
                               "unsere", "steuern"),
hits = c(2, 3, 15, 4), score = rnorm(4))
sim_t <- detect_similar_words(word_df, model, compare_by = "score")
drop_which(sim_t, compare_hits = TRUE, win_threshold = .4)
}
